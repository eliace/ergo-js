{"id":"../node_modules/chai/lib/chai/config.js","dependencies":[{"name":"/Users/eliace/Workspace/ergo-js-3/package.json","includedInParent":true,"mtime":1558032716703},{"name":"/Users/eliace/Workspace/ergo-js-3/node_modules/chai/package.json","includedInParent":true,"mtime":1558031344359}],"generated":{"js":"module.exports = {\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":2,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":3,"column":2}},{"name":"includeStack","generated":{"line":14,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":16,"column":2}},{"name":"includeStack","generated":{"line":14,"column":2},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":16,"column":2}},{"generated":{"line":14,"column":14},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":16,"column":14}},{"generated":{"line":14,"column":16},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":16,"column":16}},{"generated":{"line":14,"column":21},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":16,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":18,"column":2}},{"name":"showDiff","generated":{"line":28,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":31,"column":2}},{"name":"showDiff","generated":{"line":28,"column":2},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":31,"column":2}},{"generated":{"line":28,"column":10},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":31,"column":10}},{"generated":{"line":28,"column":12},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":31,"column":12}},{"generated":{"line":28,"column":16},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":30,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":33,"column":2}},{"name":"truncateThreshold","generated":{"line":49,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":53,"column":2}},{"name":"truncateThreshold","generated":{"line":49,"column":2},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":53,"column":2}},{"generated":{"line":49,"column":19},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":53,"column":19}},{"generated":{"line":49,"column":21},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":53,"column":21}},{"generated":{"line":49,"column":23},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":51,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":55,"column":2}},{"name":"useProxy","generated":{"line":68,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":73,"column":2}},{"name":"useProxy","generated":{"line":68,"column":2},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":73,"column":2}},{"generated":{"line":68,"column":10},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":73,"column":10}},{"generated":{"line":68,"column":12},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":73,"column":12}},{"generated":{"line":68,"column":16},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":70,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":75,"column":2}},{"name":"proxyExcludedKeys","generated":{"line":87,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":2}},{"name":"proxyExcludedKeys","generated":{"line":87,"column":2},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":2}},{"generated":{"line":87,"column":19},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":19}},{"generated":{"line":87,"column":21},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":21}},{"generated":{"line":87,"column":22},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":22}},{"generated":{"line":87,"column":28},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":21}},{"generated":{"line":87,"column":30},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":30}},{"generated":{"line":87,"column":37},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":21}},{"generated":{"line":87,"column":39},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":39}},{"generated":{"line":87,"column":48},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":21}},{"generated":{"line":87,"column":50},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":50}},{"generated":{"line":87,"column":58},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":93,"column":21}},{"generated":{"line":88,"column":0},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":17}},{"generated":{"line":88,"column":1},"source":"../node_modules/chai/lib/chai/config.js","original":{"line":1,"column":0}}],"sources":{"../node_modules/chai/lib/chai/config.js":"module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n"},"lineCount":null}},"error":null,"hash":"05a22c5d2a1c8257d345df7de956ff40","cacheData":{"env":{}}}